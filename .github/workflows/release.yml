name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-publish:
    name: Build and Publish Package
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
    
    - name: Publish to Test PyPI
      if: github.event_name == 'workflow_dispatch'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --repository testpypi dist/* --skip-existing || true
    
    - name: Publish to PyPI
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/* --skip-existing || true
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-dist
        path: dist/

  create-github-release:
    name: Create GitHub Release Assets
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs: build-and-publish
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: release-dist
        path: dist/
    
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docs:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install sphinx sphinx-rtd-theme
    
    - name: Build documentation
      run: |
        # Placeholder for documentation build
        echo "Documentation build would happen here"
    
    - name: Deploy to GitHub Pages
      if: github.event_name == 'release'
      run: |
        echo "Documentation deployment would happen here"
